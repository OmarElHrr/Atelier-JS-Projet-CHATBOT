{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet HelpSupportComponent = class HelpSupportComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.isOpen = true;\n    this.loading = false;\n    this.messages = [];\n    this.chatForm = new FormGroup({\n      message: new FormControl('', [Validators.required])\n    });\n    this.messages.push({\n      type: 'client',\n      message: 'Hi, I am your support agent. How can I help you?'\n    });\n  }\n  openSupportPopup() {\n    this.isOpen = !this.isOpen;\n  }\n  sendMessage() {\n    const sentMessage = this.chatForm.value.message;\n    this.loading = true;\n    this.messages.push({\n      type: 'user',\n      message: sentMessage\n    });\n    this.chatForm.reset();\n    this.scrollToBottom();\n    this.messageService.sendMessage(sentMessage).subscribe(response => {\n      this.loading = false;\n      this.messages.push({\n        type: 'client',\n        message: response.message\n      });\n      this.scrollToBottom();\n    });\n  }\n  scrollToBottom() {\n    setTimeout(() => {\n      try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight + 500;\n      } catch (err) {}\n    }, 150);\n  }\n};\n__decorate([ViewChild('scrollMe')], HelpSupportComponent.prototype, \"myScrollContainer\", void 0);\nHelpSupportComponent = __decorate([Component({\n  selector: 'app-help-support',\n  templateUrl: './help-support.component.html',\n  styleUrls: ['./help-support.component.scss']\n})], HelpSupportComponent);\nexport { HelpSupportComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,QAAQ,eAAe;AACpD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAa5D,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAS/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IARlC,WAAM,GAAG,IAAI;IACb,YAAO,GAAG,KAAK;IACf,aAAQ,GAAc,EAAE;IACxB,aAAQ,GAAG,IAAIL,SAAS,CAAC;MACvBM,OAAO,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,CAAC;KACnD,CAAC;IAIA,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MACjBC,IAAI,EAAE,QAAQ;MACdJ,OAAO,EAAE;KACV,CAAC;EACJ;EAEAK,gBAAgB;IACd,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC5B;EAEAC,WAAW;IACT,MAAMC,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,KAAK,CAACV,OAAQ;IAChD,IAAI,CAACW,OAAO,GAAG,IAAI;IACnB,IAAI,CAACT,QAAQ,CAACC,IAAI,CAAC;MACjBC,IAAI,EAAE,MAAM;MACZJ,OAAO,EAAEQ;KACV,CAAC;IACF,IAAI,CAACC,QAAQ,CAACG,KAAK,EAAE;IACrB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACd,cAAc,CAACQ,WAAW,CAACC,WAAW,CAAC,CAACM,SAAS,CAAEC,QAAa,IAAI;MACvE,IAAI,CAACJ,OAAO,GAAG,KAAK;MACpB,IAAI,CAACT,QAAQ,CAACC,IAAI,CAAC;QACjBC,IAAI,EAAE,QAAQ;QACdJ,OAAO,EAAEe,QAAQ,CAACf;OACnB,CAAC;MACF,IAAI,CAACa,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAA,cAAc;IACZG,UAAU,CAAC,MAAK;MACd,IAAI;QACF,IAAI,CAACC,iBAAiB,CAACC,aAAa,CAACC,SAAS,GAC5C,IAAI,CAACF,iBAAiB,CAACC,aAAa,CAACE,YAAY,GAAG,GAAG;OAC1D,CAAC,OAAOC,GAAG,EAAE;IAChB,CAAC,EAAE,GAAG,CAAC;EACT;CACD;AAxCwBC,YAAtB7B,SAAS,CAAC,UAAU,CAAC,+DAAgC;AAP3CI,oBAAoB,eALhCL,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACW5B,oBAAoB,CA+ChC;SA/CYA,oBAAoB","names":["Component","ViewChild","FormGroup","FormControl","Validators","HelpSupportComponent","constructor","messageService","message","required","messages","push","type","openSupportPopup","isOpen","sendMessage","sentMessage","chatForm","value","loading","reset","scrollToBottom","subscribe","response","setTimeout","myScrollContainer","nativeElement","scrollTop","scrollHeight","err","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\omare\\OneDrive\\Desktop\\projet_js\\projet\\chatbot\\src\\app\\shared\\components\\help-support\\help-support.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from '../../service/message.service';\r\n\r\nexport interface Message {\r\n  type: string;\r\n  message: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-help-support',\r\n  templateUrl: './help-support.component.html',\r\n  styleUrls: ['./help-support.component.scss'],\r\n})\r\nexport class HelpSupportComponent {\r\n  isOpen = true;\r\n  loading = false;\r\n  messages: Message[] = [];\r\n  chatForm = new FormGroup({\r\n    message: new FormControl('', [Validators.required]),\r\n  });\r\n  @ViewChild('scrollMe') private myScrollContainer: any;\r\n\r\n  constructor(private messageService: MessageService) {\r\n    this.messages.push({\r\n      type: 'client',\r\n      message: 'Hi, I am your support agent. How can I help you?',\r\n    });\r\n  }\r\n\r\n  openSupportPopup() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  sendMessage() {\r\n    const sentMessage = this.chatForm.value.message!;\r\n    this.loading = true;\r\n    this.messages.push({\r\n      type: 'user',\r\n      message: sentMessage,\r\n    });\r\n    this.chatForm.reset();\r\n    this.scrollToBottom();\r\n    this.messageService.sendMessage(sentMessage).subscribe((response: any) => {\r\n      this.loading = false;\r\n      this.messages.push({\r\n        type: 'client',\r\n        message: response.message,\r\n      });\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  scrollToBottom() {\r\n    setTimeout(() => {\r\n      try {\r\n        this.myScrollContainer.nativeElement.scrollTop =\r\n          this.myScrollContainer.nativeElement.scrollHeight + 500;\r\n      } catch (err) {}\r\n    }, 150);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}